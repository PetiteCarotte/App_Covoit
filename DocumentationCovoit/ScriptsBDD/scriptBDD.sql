-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.alertes
(
    id bigserial NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT alertes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.base_militaires
(
    id_base_militaire bigserial NOT NULL,
    nom_de_la_base character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nom_de_la_commune character varying(255) COLLATE pg_catalog."default" NOT NULL,
    acronyme character varying(255) COLLATE pg_catalog."default" NOT NULL,
    code_postal character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT base_militaires_pkey PRIMARY KEY (id_base_militaire)
);

CREATE TABLE IF NOT EXISTS public.cache
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.cache_locks
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    owner character varying(255) COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_locks_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.communes
(
    code_commune_insee character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nom_de_la_commune character varying(255) COLLATE pg_catalog."default" NOT NULL,
    code_postal character varying(255) COLLATE pg_catalog."default" NOT NULL,
    libelle_d_acheminement character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT communes_pkey PRIMARY KEY (code_commune_insee)
);

CREATE TABLE IF NOT EXISTS public.jours
(
    id_jours bigserial NOT NULL,
    lundi boolean NOT NULL,
    mardi boolean NOT NULL,
    mercredi boolean NOT NULL,
    jeudi boolean NOT NULL,
    vendredi boolean NOT NULL,
    samedi boolean NOT NULL,
    dimanche boolean NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT jours_pkey PRIMARY KEY (id_jours)
);

CREATE TABLE IF NOT EXISTS public.migrations
(
    id serial NOT NULL,
    migration character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch integer NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.password_reset_tokens
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.rapports
(
    id_rapport bigserial NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    date_rapport timestamp(0) without time zone NOT NULL,
    statut integer NOT NULL,
    id_utilisateur bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT rapports_pkey PRIMARY KEY (id_rapport)
);

CREATE TABLE IF NOT EXISTS public.reservations
(
    id_passager bigint NOT NULL,
    id_trajet bigint NOT NULL,
    qte_bagages_demandee integer NOT NULL,
    nbr_places_demande integer NOT NULL,
    commentaire character varying(255) COLLATE pg_catalog."default",
    date_reservation timestamp(0) without time zone NOT NULL,
    statut character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT reservations_pkey PRIMARY KEY (id_passager, id_trajet)
);

CREATE TABLE IF NOT EXISTS public.sessions
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id bigint,
    ip_address character varying(45) COLLATE pg_catalog."default",
    user_agent text COLLATE pg_catalog."default",
    payload text COLLATE pg_catalog."default" NOT NULL,
    last_activity integer NOT NULL,
    CONSTRAINT sessions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.trajets
(
    id bigserial NOT NULL,
    date_depart date,
    heure_depart time(0) without time zone NOT NULL,
    qte_bagages integer NOT NULL,
    nbr_places integer NOT NULL,
    qte_bagages_occupee integer,
    nbr_places_occupe integer,
    description character varying(255) COLLATE pg_catalog."default",
    trajet_regulier boolean NOT NULL,
    statut boolean NOT NULL,
    domicile_base boolean NOT NULL,
    id_conducteur bigint NOT NULL,
    id_commune character varying(255) COLLATE pg_catalog."default",
    id_base_militaire bigint NOT NULL,
    id_jours bigint,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT trajets_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    firstname character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nid character varying(255) COLLATE pg_catalog."default",
    unite character varying(255) COLLATE pg_catalog."default",
    numero_de_poste character varying(255) COLLATE pg_catalog."default",
    numero_de_telephone character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_commune character varying(255) COLLATE pg_catalog."default",
    id_base_militaire bigint,
    email_verified_at timestamp(0) without time zone,
    remember_token character varying(100) COLLATE pg_catalog."default",
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_unique UNIQUE (email),
    CONSTRAINT users_nid_unique UNIQUE (nid)
);

ALTER TABLE IF EXISTS public.rapports
    ADD CONSTRAINT rapports_id_utilisateur_foreign FOREIGN KEY (id_utilisateur)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservations
    ADD CONSTRAINT reservations_id_passager_foreign FOREIGN KEY (id_passager)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservations
    ADD CONSTRAINT reservations_id_trajet_foreign FOREIGN KEY (id_trajet)
    REFERENCES public.trajets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.trajets
    ADD CONSTRAINT trajets_id_base_militaire_foreign FOREIGN KEY (id_base_militaire)
    REFERENCES public.base_militaires (id_base_militaire) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.trajets
    ADD CONSTRAINT trajets_id_commune_foreign FOREIGN KEY (id_commune)
    REFERENCES public.communes (code_commune_insee) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.trajets
    ADD CONSTRAINT trajets_id_conducteur_foreign FOREIGN KEY (id_conducteur)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.trajets
    ADD CONSTRAINT trajets_id_jours_foreign FOREIGN KEY (id_jours)
    REFERENCES public.jours (id_jours) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_id_base_militaire_foreign FOREIGN KEY (id_base_militaire)
    REFERENCES public.base_militaires (id_base_militaire) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_id_commune_foreign FOREIGN KEY (id_commune)
    REFERENCES public.communes (code_commune_insee) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;

END;